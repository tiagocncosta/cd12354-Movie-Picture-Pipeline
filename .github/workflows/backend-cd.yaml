name: backend-cd

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - starter/backend

env:
  ECR_REPO_NAME: '038131199487.dkr.ecr.us-east-1.amazonaws.com/backend'
  CONTAINER_TAG: '1.0.1'
  AWS_REGION: 'us-east-1'

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install pipenv and flake8
        run: |
          echo "Installing pipenv and flake8..."
          pip install pipenv flake8
      - name: Pipenv install
        run: |
          echo "Installing dependencies with pipenv..."
          cd starter/backend && pipenv install
      - name: Run lint
        run: |
          echo "Running lint with flake8..."
          cd starter/backend && pipenv run lint

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install pipenv
        run: |
          echo "Installing pipenv..."
          pip install pipenv
      - name: Pipenv install
        run: |
          echo "Installing dependencies with pipenv..."
          cd starter/backend && pipenv install
      - name: Run test
        run: |
          echo "Running tests with pipenv..."
          cd starter/backend && pipenv run test

  build:
    runs-on: ubuntu-latest
    needs: [ lint, test ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install pipenv
        run: |
          echo "Installing pipenv..."
          pip install pipenv
      - name: Pipenv install
        run: |
          echo "Installing dependencies with pipenv..."
          cd starter/backend && pipenv install
      - name: Set AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        run: |
          echo "Configuring AWS credentials..."
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set aws_session_token $AWS_SESSION_TOKEN
      - name: Docker login
        run: |
          echo "Logging into Docker registry..."
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account | jq -r .)
          docker login -u AWS -p $(aws ecr get-login-password --region ${{ env.AWS_REGION }}) ${AWS_ACCOUNT_ID}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: starter/backend
          file: starter/backend/Dockerfile
          tags: ${{ env.ECR_REPO_NAME }}:${{ env.CONTAINER_TAG }}
          push: true
