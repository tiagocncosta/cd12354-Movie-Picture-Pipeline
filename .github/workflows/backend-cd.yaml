name: Backend Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - starter/backend

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install pipenv and flake8
        run: |
          echo "Installing pipenv and flake8..."
          python -m pip install --upgrade pip
          pip install pipenv flake8

      - name: lint
        run: |
          echo "Running lint with flake8..."
          cd starter/backend && pipenv run lint

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Python 3
        uses:  actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install pipenv and flake8
        run: |
          echo "Installing pipenv and flake8..."
          python -m pip install --upgrade pip
          pip install pipenv flake8

      - name: test
        run: |
          echo "Running tests with pipenv..."
          cd starter/backend && pipenv run test

  build:
    runs-on: ubuntu-latest
    needs: [ lint, test ]

    env:
      ECR_REPO_NAME: '038131199487.dkr.ecr.us-east-1.amazonaws.com/backend'
      CONTAINER_TAG: 'latest'
      AWS_REGION: 'us-east-1'

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: docker login
        run: |
          echo "Logging into Docker registry..."
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account | jq -r .)
          docker login -u AWS -p $(aws ecr get-login-password --region ${{ env.AWS_REGION }}) ${AWS_ACCOUNT_ID}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: starter/backend
          file: starter/backend/Dockerfile
          tags: ${{ env.ECR_REPO_NAME }}:${{ env.CONTAINER_TAG }}
          push: true

      - name: Update Kubeconfig
        run: |
          aws eks update-kubeconfig --name cluster --region us-east-1
          kustomize edit set image backend=${AWS_ACCOUNT_ID}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/$REPO_NAME:$IMAGE_TAG
          kustomize build | kubectl apply -f -