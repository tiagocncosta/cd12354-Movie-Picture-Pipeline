name: frontend-cd

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - starter/frontend

env:
  ECR_REPO_NAME: '038131199487.dkr.ecr.us-east-1.amazonaws.com/frontend'
  CONTAINER_TAG: '1.0.1'
  API_URL: 'http://url'
  AWS_REGION: 'us-east-1'

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Run lint
      run: |
        echo "Installing dependencies and running lint..."
        npm --prefix starter/frontend install
        npm --prefix starter/frontend run lint

  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Run tests
      run: |
        echo "Installing dependencies and running tests..."
        npm --prefix starter/frontend install
        CI=true npm --prefix starter/frontend test

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Build application
      run: |
        echo "Building application..."
        npm --prefix starter/frontend install
        CI=true npm --prefix starter/frontend run build
    - name: Set AWS credentials
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      run: |
        echo "Configuring AWS credentials..."
        aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
        aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
        aws configure set aws_session_token $AWS_SESSION_TOKEN
    - name: Docker login
      run: |
        echo "Logging into Docker registry..."
        AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account | jq -r .)
        docker login -u AWS -p $(aws ecr get-login-password --region ${{ env.AWS_REGION }}) ${AWS_ACCOUNT_ID}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
    - name: Build Docker image
      uses: docker/build-push-action@v2
      with:
        context: starter/frontend
        file: starter/frontend/Dockerfile
        build-args: "REACT_APP_MOVIE_API_URL=${{ env.API_URL }}"
        tags: ${{ env.ECR_REPO_NAME }}:${{ env.CONTAINER_TAG }}
        push: true
