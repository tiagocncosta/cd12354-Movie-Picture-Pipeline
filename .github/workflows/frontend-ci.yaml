name: Frontend Continuous Integration

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: Node 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    - name: install dependencies
      working-directory: starter/frontend
      run: |
        echo "Installing dependencies..."
        npm ci

    - name: lint
      run: |
        echo "Running lint..."
        cd starter/frontend && npm run lint

  test:
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: node 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    - name: install dependencies
      working-directory: starter/frontend
      run: |
        echo "Installing dependencies..."
        npm ci

    - name: test
      run: |
        echo "Installing dependencies..."
        cd starter/frontend && npm run test

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    env:
      ECR_REPO_NAME: 'frontend'
      ECR_REGISTRY: '038131199487.dkr.ecr.us-east-1.amazonaws.com'
      CONTAINER_TAG: 'latest'

    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: node 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    - name: build and run docker
      run: |
        cd starter/frontend
        docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 -t $ECR_REGISTRY/$ECR_REPOSITORY:$CONTAINER_TAG . 
        docker run --name frontend -p 3000:3000 -d frontend
